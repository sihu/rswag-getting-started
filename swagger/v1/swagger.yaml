---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/blogs":
    get:
      summary: Blogs
      security:
      - api_key: []
      operationId: getBlogs
      tags:
      - Blog
      parameters:
      - name: query
        in: query
        required: false
        schema:
          type: string
      description: |
        This endpoint returns all blogs in json.

        ### A better description

        And even with interpolation: Text length will be maximum 100
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                when not using a query:
                  value:
                  - id: 1
                    title: Blog 1
                    text: Text 1
                    created_at: '2022-01-02T15:55:22.000Z'
                    updated_at: '2022-01-02T15:55:22.000Z'
                    url: http://www.example.com/blogs/1.json
                  - id: 2
                    title: Blog 2
                    text: Text 2
                    created_at: '2022-01-02T15:55:22.000Z'
                    updated_at: '2022-01-02T15:55:22.000Z'
                    url: http://www.example.com/blogs/2.json
                using a query:
                  value:
                  - id: 3
                    title: Blog 1
                    text: Text 1
                    created_at: '2022-01-02T15:55:22.000Z'
                    updated_at: '2022-01-02T15:55:22.000Z'
                    url: http://www.example.com/blogs/3.json
                  - id: 4
                    title: Blog 2
                    text: Text 2
                    created_at: '2022-01-02T15:55:22.000Z'
                    updated_at: '2022-01-02T15:55:22.000Z'
                    url: http://www.example.com/blogs/4.json
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/blog_item"
        '401':
          description: Unauthenticated
          content:
            application/json:
              examples:
                without api key:
                  value:
                    error: Invalid API token
                with wrong api key:
                  value:
                    error: Invalid API token
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
components:
  schemas:
    errors_object:
      type: object
      properties:
        message:
          type: string
    blog_item:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        text:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        url:
          type: string
      required:
      - id
      - title
      - text
      - created_at
      - updated_at
      - url
  securitySchemes:
    api_key:
      type: apiKey
      name: X-API-TOKEN
      in: header
